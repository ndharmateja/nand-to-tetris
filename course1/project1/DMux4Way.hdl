/**
 * 4-way demultiplexor:
 * [a, b, c, d] = [in, 0, 0, 0] if sel = 00
 *                [0, in, 0, 0] if sel = 01
 *                [0, 0, in, 0] if sel = 10
 *                [0, 0, 0, in] if sel = 11
 */
CHIP DMux4Way {
    IN in, sel[2];
    OUT a, b, c, d;

    PARTS:
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    
    // a = (~sel[0] ^ ~sel[1] ^ in) v 0;
    And3Way(a=notsel0, b=notsel1, c=in, out=aTemp);
    Or(a=aTemp, b=false, out=a);

    // b = (sel[0] ^ ~sel[1] ^ in) v 0;
    And3Way(a=sel[0], b=notsel1, c=in, out=bTemp);
    Or(a=bTemp, b=false, out=b);

    // c = (~sel[0] ^ sel[1] ^ in) v 0;
    And3Way(a=notsel0, b=sel[1], c=in, out=cTemp);
    Or(a=cTemp, b=false, out=c);

    // d = (sel[0] ^ sel[1] ^ in) v 0;
    And3Way(a=sel[0], b=sel[1], c=in, out=dTemp);
    Or(a=dTemp, b=false, out=d);
}