/**
 * Computes the sum of three bits.
 */
CHIP FullAdder {
    IN a, b, c;  // 1-bit inputs
    OUT sum,     // Right bit of a + b + c
        carry;   // Left bit of a + b + c

    PARTS:
    Not(in=c, out=notc);
    And(a=a, b=b, out=aAndb);
    Or(a=a, b=b, out=aOrb);
    Xor(a=a, b=b, out=aXorb);
    Not(in=aXorb, out=notaXorb);
    
    And(a=notc, b=aAndb, out=carry1);
    And(a=c, b=aOrb, out=carry2);
    Or(a=carry1, b=carry2, out=carry);
    
    And(a=notc, b=aXorb, out=sum1);
    And(a=c, b=notaXorb, out=sum2);
    Or(a=sum1, b=sum2, out=sum);
}